#+TITLE: ブログはじめます。
#+AUTHOR: Y. Kitamu
#+OPTIONS: ^:{}
#+BEGIN_EXPORT html
---
layout: default
title: ブログはじめます。
---
#+END_EXPORT
日々の記録や勉強したことのメモにブログを始めることにしました。
読んだ論文のまとめとか、プログラミングについて勉強したこととか書いていきたいと思います。
とりあえずの目標は毎週2回投稿です。出来の良い記事はQiitaとかにも投稿していきます。

まずは、このブログの環境構築についてまとめておこうと思います。
このブログはgithub pages + jekyll (+ org-mode)を使用しています。
github pagesはgithubリポジトリからウェブサイトを生成するサービスです。
githubのアカウント名に紐付いたURLが使用できます。
jekyllは静的サイトジェネレーターで、jekyllを使用することでgithub pages上で簡単にブログが作れます。

今回は、ローカルでも動作確認ができるように、jekyllのDocker imageを使用してブログを生成しました。
docker-compose.ymlは以下のような感じです。

#+name: docker-compose.yml
#+BEGIN_SRC yml
version: "3.7"

services:
  blog:
    image: jekyll/jekyll:latest
    volumes:
      - $PWD/docs:/srv/jekyll
    ports:
      - "4444:4000"
    command: jekyll serve --force_polling
    # command: jekyll build  # create new jekyll site
    restart: always
#+END_SRC

一番最初にjekyllの各種設定ファイルを生成する際はsrc_bash[:exports code]{command: jekyll build}
とします。これによってjekyllの各種設定ファイルが生成されるので、_config.ymlとかを適当に編集します。
ローカルサーバーをたてて動作を確認する際はsrc_bash[:exports code]{command: jekyll serve --force_polling}とします。

環境構築はほぼこれだけで完了しました。
あとは、テーマを変えたり、いろんなページを追加していくことになるのですが、それはまた気が向いたら。

ブログの環境構築の話はこれで終わりですが、ここからが本題で、
ブログの記事の作成環境の構築をしていきます。
通常のjekyllだとおそらくmarkdownを使う(?知らない)のですが、
一介のEmacsユーザーとしてはorg-modeでなんとかしたいところです。
色々さがしたのですが、結局orgの公式ページにjekyllの記事がありました。
ざっくりいうと、orgファイルはjekyllで直接表示できない(プラグイン使えばできる?)ので、
htmlに変換して表示しましょうという方針です。

https://orgmode.org/worg/org-tutorials/org-jekyll.html

ここに書かれている設定を順番に行っていきます。
まず、orgファイル保管用のディレクトリを作成します。
このディレクトリの構成は、jekyllのディレクトリ構成と対応するようにします。
(例えばjekyllの_postに入る記事のorgファイルは、このディレクトリの_post以下に配置する。)
つぎに、init.elに設定を追加します。

#+name: init.el
#+BEGIN_SRC elisp
(setq org-publish-project-alist
      '(
        ("org-blog"
         :base-directory "~/Documents/kitamura.github.io/org/"  ;; orgファイルが格納されているパス
         :base-extension "org"
         :publishing-directory "~/Documents/kitamura.github.io/docs"  ;; jekyllのルートパス
         :recursive t
         :publishing-function org-html-publish-to-html
         :headline-levels 4
         :html-extension "html"
         :body-only t
         )
        ("org-blog-static"
         :base-directory "~/Documents/kitamura.github.io/org/"  ;; orgファイルが格納されているパス
         :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf\\|php"
         :publishing-directory "~/Documents/kitamura.github.io/docs"  ;; jekyllのルートパス
         :recursive t
         :publishing-function org-publish-attachment)
        ("blog" :components ("org-blog" "org-blog-static"))
        ))
#+END_SRC

org-publish-project-alistにプロジェクト名とその設定を書いておくと、
M-x org-publish-project <project名>で指定した出力を作成してくれます。
例えば上記の場合だと"org-blog"はorgファイルをhtmlに変換(<body>タグ内のみ生成)する設定になっており、
M-x org-publish-project org-blogとすると、
base-directory内のorgファイルがpublishing-directoryにhtmlに変換されて出力されます。
(markdownに変換することもできるはずですが、うまく動きませんでした。)
あとはきちんと表示されるか確認するのみです。
(この記事もきちんと表示されるかな、、、)

org-modeの使い方ももっと勉強せねば、、
